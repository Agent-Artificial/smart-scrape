import random

class MockTwitterQuestionsDataset:
    def __init__(self):
        # Extended list of templates for questions
        self.question_templates = [
            "What's the current sentiment on Twitter about {}?",
            "Are there any breaking news tweets about {}?",
            "How are celebrities reacting on Twitter to {}?",
            "What memes are circulating on Twitter regarding {}?",
            "What are the latest viral tweets about {}?",
            "How is Twitter using humor to deal with {}?",
            "What are the most controversial tweets about {}?",
            "Are there any inspirational stories on Twitter regarding {}?",
            "How is the Twitter community supporting {}?",
            "What are the recent Twitter polls about {}?"
            "What's the latest discussion on Twitter about {}?",
            "How are Twitter users reacting to {}?",
            "What are the recent tweets regarding {}?",
            "What's trending on Twitter about {}?",
            "What are the top opinions on Twitter about {}?",
            "Are there any new developments in {} on Twitter?",
            "How are experts on Twitter analyzing {}?",
            "What are Twitter influencers saying about {}?",
            "What humorous content about {} is being shared on Twitter?",
        ]

        # Expanded list of topics, focusing on commonly discussed themes on Twitter
        self.topics = [
            "global warming",
            "tech innovations",
            "startup culture",
            "world politics",
            "celebrity news",
            "music releases",
            "film premieres",
            "sports updates",
            "fitness trends",
            "fashion highlights",
            "gaming news",
            "book reviews",
            "travel tips",
            "food recipes",
            "health advice",
            "the Oscars",
            "the Super Bowl",
            "current fashion trends",
            "the SpaceX launch",
            "the latest Marvel movie",
            "a popular Netflix series",
            "new technological breakthroughs",
            "global political events",
            "recent natural disasters",
            "major music festivals",
            "health and wellness trends",
            "cryptocurrency fluctuations",
            "environmental activism",
            "celebrity lifestyle updates",
            "innovations in AI and robotics",
            "world travel destinations",
            "sports championships",
            "upcoming global conferences",
            "viral dance challenges",
            "popular gaming events"
            "the Oscars",
            "the Super Bowl",
            "current fashion trends",
            "the SpaceX launch",
            "the latest Marvel movie",
            "a popular Netflix series",
            "new technological breakthroughs",
            "international diplomacy",
            "climate change summits",
            "global health initiatives",
            "space exploration missions",
            "humanitarian crises",
            "artificial intelligence advancements",
            "electric vehicles",
            "space tourism",
            "renewable energy",
            "virtual reality",
            "stock market trends",
            "cryptocurrency updates",
            "startup ecosystem",
            "e-commerce growth",
            "global trade agreements",
            "election updates",
            "policy changes",
            "political movements",
            "international relations",
            "human rights issues",
            "new movie releases",
            "music album launches",
            "celebrity interviews",
            "streaming service trends",
            "award ceremonies",
            "major sporting events",
            "Olympics updates",
            "championship leagues",
            "athlete profiles",
            "sports technology",
            "fitness trends",
            "mental health awareness",
            "nutritional advice",
            "medical breakthroughs",
            "wellness retreats",
            "travel destinations",
            "fashion weeks",
            "culinary trends",
            "interior design ideas",
            "DIY projects",
            "online education platforms",
            "educational reforms",
            "scholarly achievements",
            "learning methodologies",
            "student initiatives",
            "environmental conservation",
            "scientific discoveries",
            "wildlife preservation",
            "sustainability practices",
            "ecological movements",
            "social justice campaigns",
            "cultural festivals",
            "historical commemorations",
            "social media trends",
            "community outreach programs",
            "art exhibitions",
            "photography contests",
            "music festivals",
            "theatrical performances",
            "literary awards",
            "emerging market trends",
            "global warming impacts",
            "tech startup innovations",
            "urban development projects",
            "adventures in travel blogging",
            "breakthroughs in medicine",
            "evolution of digital currencies",
            "trends in sustainable fashion",
            "advancements in drone technology",
            "discoveries in astrophysics",
            "#ai",
            "#openai",
            "#dev",
            "#crypto",
            "#blockchain"
            "#technology",
            "#healthcare",
            "#education",
            "#entertainment",
            "#travel",
            "#foodie",
            "#sports",
            "#music",
            "#movies",
            "#gaming",
            "#literature",
            "#science",
            "#history",
            "#art",
            "#culture",            
        ]

    def generate_question(self):
        # Randomly select a question template and a topic
        template = random.choice(self.question_templates)
        topic = random.choice(self.topics)

        # Generate a question
        return template.format(topic)

    def next(self):
        # Return a generated question
        return self.generate_question()


if __name__ == "__main__":
    # Example usage
    twitter_questions_dataset = MockTwitterQuestionsDataset()
    for _ in range(100):
        print(twitter_questions_dataset.next())
