name: Deploy to AWS CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REACT_APP_BACKEND_HOST: ${{ env.BACKEND_API_URL }}
      AWS_REGION: ${{ env.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
      AWS_DISTRIBUTION: ${{ env.AWS_DISTRIBUTION }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Setup yarn
        run: npm install -g yarn

      - name: Print BACKEND_API_URL
        run: echo "BACKEND_API_URL is $REACT_APP_BACKEND_HOST"

      - name: Print AWS_REGION
        run: echo "AWS_REGION is $AWS_REGION"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        working-directory: ui

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install
        working-directory: ui

      - name: Build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: yarn run build
        working-directory: ui

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: $AWS_ACCESS_KEY_ID
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          aws-region: $AWS_REGION

      - name: Upload to S3
        run: aws s3 sync ./ui/build s3://smart-scrape-ui --delete

      - name: Invalidate CloudFront Distribution
        run: aws cloudfront create-invalidation --distribution-id $AWS_DISTRIBUTION --paths "/*"